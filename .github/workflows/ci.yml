name: CI tests

on:
  pull_request:
  push:
    branches: [ "master" ]

# Configure GitHub Actions cancel in progress workflow to avoid redundant runs in pull requests.
# See: https://docs.github.com/en/enterprise-cloud@latest/actions/writing-workflows/choosing-what-your-workflow-does/control-the-concurrency-of-workflows-and-jobs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !contains(github.ref, 'heads/master')}}

jobs:
  # Specific tests for divzero package
  divzero:
    name: ${{ matrix.script }} on JDK ${{ matrix.java_version }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix:
        script: ['cftests-junit', 'cftests-nonjunit']
        java_version: [21]
    env:
      JAVA_VERSION: ${{ matrix.java_version }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{ matrix.java_version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java_version }}
        distribution: 'temurin'

    # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v4.2.0

    - name: Setup Bazel
      uses: bazel-contrib/setup-bazel@0.9.1
      if: matrix.script == 'cftests-nonjunit'
      with:
        # Avoid downloading Bazel every time.
        bazelisk-cache: true
        # Store build cache per workflow.
        disk-cache: ${{ github.workflow }}
        # Share repository cache between workflows.
        repository-cache: true

    - name: Run specific test
      run: ./gradlew :checker:divzerotest
